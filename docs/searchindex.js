Search.setIndex({"docnames": ["docs/collider", "docs/curry", "docs/door", "docs/fire", "docs/ladder", "docs/leaves", "docs/lever", "docs/matrix", "docs/modules", "docs/number", "docs/plant", "docs/snow", "docs/tinted_glass", "docs/torch", "docs/util", "index", "models/venv/Lib/site-packages/MarkupSafe-2.1.2.dist-info/LICENSE", "models/venv/Lib/site-packages/astunparse-1.6.3.dist-info/AUTHORS", "models/venv/Lib/site-packages/piglet-1.0.0.dist-info/DESCRIPTION"], "filenames": ["docs\\collider.rst", "docs\\curry.rst", "docs\\door.rst", "docs\\fire.rst", "docs\\ladder.rst", "docs\\leaves.rst", "docs\\lever.rst", "docs\\matrix.rst", "docs\\modules.rst", "docs\\number.rst", "docs\\plant.rst", "docs\\snow.rst", "docs\\tinted_glass.rst", "docs\\torch.rst", "docs\\util.rst", "index.rst", "models\\venv\\Lib\\site-packages\\MarkupSafe-2.1.2.dist-info\\LICENSE.rst", "models\\venv\\Lib\\site-packages\\astunparse-1.6.3.dist-info\\AUTHORS.rst", "models\\venv\\Lib\\site-packages\\piglet-1.0.0.dist-info\\DESCRIPTION.rst"], "titles": ["collider module", "curry module", "door module", "fire module", "ladder module", "leaves module", "lever module", "matrix module", "models", "number module", "plant module", "snow module", "tinted_glass module", "torch module", "util module", "Minecraftclone\u2019s software design documentation by kruslin2", "&lt;no title&gt;", "Credits", "&lt;no title&gt;"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "pos1": 0, "none": [0, 7], "pos2": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "object": [0, 7], "veloc": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16], "function": [0, 7], "perform": [0, 7], "investig": 0, "collis": 0, "between": 0, "itself": 0, "an": [0, 7], "paramet": [0, 7], "name": [0, 7, 16], "type": [0, 7], "list": [0, 16], "return": [0, 7], "int": 0, "mycodetestcas": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "methodnam": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "runtest": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "testcas": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "setup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "hook": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "method": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "set": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "up": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "test": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "fixtur": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "befor": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "exercis": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "test_oper": [0, 7, 8, 15], "implement": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "issu": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "15": [1, 2, 3, 10, 11, 14], "assign": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "kruslin2": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "pass": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "autom": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "unittest": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "100": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "coverag": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "The": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17], "report": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "pdf": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "format": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "i": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16], "attach": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "github": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "link": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "pull": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "request": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "associ": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "It": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "declar": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "all": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "geometr": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "variabl": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "need": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "creat": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "spice": 1, "3d": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "block": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14], "model": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14], "terrain": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], "test_bon": [1, 8, 15], "test_collid": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15], "test_glass": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15], "test_is_cub": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15], "test_transpar": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15], "test_shading_valu": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15], "test_tex_coord": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15], "test_transluc": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15], "test_vertex_posit": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15], "http": [3, 4, 5, 6, 10, 11, 12, 13], "wiki": [3, 4, 5, 6, 10, 11, 12, 13], "sportskeeda": 3, "com": [3, 4, 5, 6, 10, 11, 12, 13, 17], "minecraft": [3, 4, 5, 6, 10, 11, 12, 13, 15], "50": 4, "fandom": [4, 5, 6, 10, 11, 12, 13], "65": 5, "tree": [5, 10], "archiv": 5, "66": 6, "frustum": [7, 8, 15], "left": 7, "right": 7, "bottom": 7, "top": 7, "far": 7, "oper": 7, "when": 7, "user": 7, "ar": [7, 15, 16], "plai": 7, "game": 7, "integ": 7, "load_ident": [7, 8, 15], "load": 7, "ident": 7, "data": [7, 16], "orthograph": [7, 8, 15], "project": 7, "perspect": [7, 8, 15], "fovi": 7, "aspect": 7, "help": 7, "other": [7, 15, 16], "draw": 7, "2d": 7, "rotat": [7, 8, 15], "angl": 7, "x": 7, "y": 7, "z": 7, "rotate_2d": [7, 8, 15], "scale": [7, 8, 15], "strecht": 7, "out": [7, 16], "translat": [7, 8, 15], "copy_matrix": [7, 8, 15], "global": 7, "copi": 7, "math": 7, "multiply_matric": [7, 8, 15], "x_matrix": 7, "y_matrix": 7, "multipl": 7, "collid": [8, 15], "modul": [8, 15], "curri": [8, 15], "door": [8, 15], "fire": [8, 15], "ladder": [8, 15], "leav": [8, 15], "lever": [8, 15], "matrix": [8, 15], "number": [8, 15], "test_indic": [8, 9, 15], "plant": [8, 15], "snow": [8, 15], "tinted_glass": [8, 15], "torch": [8, 15], "util": [8, 15], "test_direct": [8, 14, 15], "test_down": [8, 14, 15], "test_east": [8, 14, 15], "test_north": [8, 14, 15], "test_south": [8, 14, 15], "test_up": [8, 14, 15], "test_west": [8, 14, 15], "21": 9, "blokc": 9, "snow_block": 11, "67": 12, "tint": 12, "glass": 12, "48": 13, "constant": 14, "plane": 14, "orient": 14, "These": 15, "follow": [15, 16], "togeth": 15, "which": 15, "team": 15, "member": 15, "us": [15, 16], "import": 15, "bigger": 15, "form": [15, 16], "program": 15, "code": [15, 16], "gener": 15, "ski": 15, "featur": 15, "move": 15, "cloud": 15, "For": 15, "refer": 15, "actual": 15, "develop": 15, "python3": 15, "can": 15, "download": 15, "from": [15, 16], "repositori": 15, "branch": 15, "index": 15, "search": 15, "page": 15, "copyright": 16, "2010": 16, "pallet": 16, "redistribut": 16, "binari": 16, "without": 16, "modif": 16, "permit": 16, "provid": 16, "condit": 16, "met": 16, "must": 16, "retain": 16, "abov": 16, "notic": 16, "disclaim": 16, "reproduc": 16, "document": 16, "materi": 16, "distribut": 16, "neither": 16, "holder": 16, "nor": 16, "its": 16, "contributor": 16, "mai": 16, "endors": 16, "promot": 16, "product": 16, "deriv": 16, "softwar": [16, 17], "specif": 16, "prior": 16, "written": 16, "permiss": 16, "BY": 16, "THE": 16, "AND": 16, "AS": 16, "ani": 16, "express": 16, "OR": 16, "impli": 16, "warranti": 16, "includ": 16, "BUT": 16, "NOT": 16, "limit": 16, "TO": 16, "OF": 16, "merchant": 16, "fit": 16, "FOR": 16, "A": 16, "particular": 16, "purpos": 16, "IN": 16, "NO": 16, "event": 16, "shall": 16, "BE": 16, "liabl": 16, "direct": 16, "indirect": 16, "incident": 16, "special": 16, "exemplari": 16, "consequenti": 16, "damag": 16, "procur": 16, "substitut": 16, "good": 16, "servic": 16, "loss": 16, "profit": 16, "busi": 16, "interrupt": 16, "howev": 16, "caus": 16, "ON": 16, "theori": 16, "liabil": 16, "whether": 16, "contract": 16, "strict": 16, "tort": 16, "neglig": 16, "otherwis": 16, "aris": 16, "wai": 16, "even": 16, "IF": 16, "advis": 16, "possibl": 16, "SUCH": 16, "simon": 17, "percival": 17, "gmail": 17, "python": 17, "foundat": 17, "bogdan": 17, "opanchuk": 17, "vladimir": 17, "iakovlev": 17, "thoma": 17, "grainger": 17, "amund": 17, "hov": 17, "jakub": 17, "wilk": 17, "mateusz": 17, "bysiek": 17, "serg": 17, "san": 17, "paill": 17, "unknown": 18}, "objects": {"": [[0, 0, 0, "-", "collider"], [1, 0, 0, "-", "curry"], [2, 0, 0, "-", "door"], [3, 0, 0, "-", "fire"], [4, 0, 0, "-", "ladder"], [5, 0, 0, "-", "leaves"], [6, 0, 0, "-", "lever"], [7, 0, 0, "-", "matrix"], [9, 0, 0, "-", "number"], [10, 0, 0, "-", "plant"], [11, 0, 0, "-", "snow"], [12, 0, 0, "-", "tinted_glass"], [13, 0, 0, "-", "torch"], [14, 0, 0, "-", "util"]], "collider": [[0, 1, 1, "", "Collider"], [0, 1, 1, "", "MyCodeTestCase"]], "collider.Collider": [[0, 2, 1, "", "collide"]], "collider.MyCodeTestCase": [[0, 2, 1, "", "setUp"], [0, 2, 1, "", "test_operation"]], "curry": [[1, 1, 1, "", "MyCodeTestCase"]], "curry.MyCodeTestCase": [[1, 2, 1, "", "setUp"], [1, 2, 1, "", "test_bones"], [1, 2, 1, "", "test_colliders"], [1, 2, 1, "", "test_glass"], [1, 2, 1, "", "test_is_cube"], [1, 2, 1, "", "test_transparent"]], "door": [[2, 1, 1, "", "MyCodeTestCase"]], "door.MyCodeTestCase": [[2, 2, 1, "", "setUp"], [2, 2, 1, "", "test_colliders"], [2, 2, 1, "", "test_glass"], [2, 2, 1, "", "test_is_cube"], [2, 2, 1, "", "test_shading_values"], [2, 2, 1, "", "test_tex_coords"], [2, 2, 1, "", "test_translucent"], [2, 2, 1, "", "test_transparency"], [2, 2, 1, "", "test_transparent"], [2, 2, 1, "", "test_vertex_positions"]], "fire": [[3, 1, 1, "", "MyCodeTestCase"]], "fire.MyCodeTestCase": [[3, 2, 1, "", "setUp"], [3, 2, 1, "", "test_colliders"], [3, 2, 1, "", "test_glass"], [3, 2, 1, "", "test_is_cube"], [3, 2, 1, "", "test_shading_values"], [3, 2, 1, "", "test_tex_coords"], [3, 2, 1, "", "test_translucent"], [3, 2, 1, "", "test_transparency"], [3, 2, 1, "", "test_transparent"], [3, 2, 1, "", "test_vertex_positions"]], "ladder": [[4, 1, 1, "", "MyCodeTestCase"]], "ladder.MyCodeTestCase": [[4, 2, 1, "", "setUp"], [4, 2, 1, "", "test_colliders"], [4, 2, 1, "", "test_glass"], [4, 2, 1, "", "test_is_cube"], [4, 2, 1, "", "test_shading_values"], [4, 2, 1, "", "test_tex_coords"], [4, 2, 1, "", "test_translucent"], [4, 2, 1, "", "test_transparency"], [4, 2, 1, "", "test_transparent"], [4, 2, 1, "", "test_vertex_positions"]], "leaves": [[5, 1, 1, "", "MyCodeTestCase"]], "leaves.MyCodeTestCase": [[5, 2, 1, "", "setUp"], [5, 2, 1, "", "test_colliders"], [5, 2, 1, "", "test_glass"], [5, 2, 1, "", "test_is_cube"], [5, 2, 1, "", "test_shading_values"], [5, 2, 1, "", "test_tex_coords"], [5, 2, 1, "", "test_translucent"], [5, 2, 1, "", "test_transparency"], [5, 2, 1, "", "test_transparent"], [5, 2, 1, "", "test_vertex_positions"]], "lever": [[6, 1, 1, "", "MyCodeTestCase"]], "lever.MyCodeTestCase": [[6, 2, 1, "", "setUp"], [6, 2, 1, "", "test_colliders"], [6, 2, 1, "", "test_glass"], [6, 2, 1, "", "test_is_cube"], [6, 2, 1, "", "test_shading_values"], [6, 2, 1, "", "test_tex_coords"], [6, 2, 1, "", "test_translucent"], [6, 2, 1, "", "test_transparency"], [6, 2, 1, "", "test_transparent"], [6, 2, 1, "", "test_vertex_positions"]], "matrix": [[7, 1, 1, "", "Matrix"], [7, 1, 1, "", "MyCodeTestCase"], [7, 3, 1, "", "copy_matrix"], [7, 3, 1, "", "multiply_matrices"]], "matrix.Matrix": [[7, 2, 1, "", "frustum"], [7, 2, 1, "", "load_identity"], [7, 2, 1, "", "orthographic"], [7, 2, 1, "", "perspective"], [7, 2, 1, "", "rotate"], [7, 2, 1, "", "rotate_2d"], [7, 2, 1, "", "scale"], [7, 2, 1, "", "translate"]], "matrix.MyCodeTestCase": [[7, 2, 1, "", "setUp"], [7, 2, 1, "", "test_operation"]], "number": [[9, 1, 1, "", "MyCodeTestCase"]], "number.MyCodeTestCase": [[9, 2, 1, "", "setUp"], [9, 2, 1, "", "test_indices"], [9, 2, 1, "", "test_shading_values"], [9, 2, 1, "", "test_tex_coords"], [9, 2, 1, "", "test_vertex_positions"]], "plant": [[10, 1, 1, "", "MyCodeTestCase"]], "plant.MyCodeTestCase": [[10, 2, 1, "", "setUp"], [10, 2, 1, "", "test_colliders"], [10, 2, 1, "", "test_glass"], [10, 2, 1, "", "test_is_cube"], [10, 2, 1, "", "test_shading_values"], [10, 2, 1, "", "test_tex_coords"], [10, 2, 1, "", "test_translucent"], [10, 2, 1, "", "test_transparency"], [10, 2, 1, "", "test_transparent"], [10, 2, 1, "", "test_vertex_positions"]], "snow": [[11, 1, 1, "", "MyCodeTestCase"]], "snow.MyCodeTestCase": [[11, 2, 1, "", "setUp"], [11, 2, 1, "", "test_colliders"], [11, 2, 1, "", "test_glass"], [11, 2, 1, "", "test_is_cube"], [11, 2, 1, "", "test_shading_values"], [11, 2, 1, "", "test_tex_coords"], [11, 2, 1, "", "test_translucent"], [11, 2, 1, "", "test_transparency"], [11, 2, 1, "", "test_transparent"], [11, 2, 1, "", "test_vertex_positions"]], "tinted_glass": [[12, 1, 1, "", "MyCodeTestCase"]], "tinted_glass.MyCodeTestCase": [[12, 2, 1, "", "setUp"], [12, 2, 1, "", "test_colliders"], [12, 2, 1, "", "test_glass"], [12, 2, 1, "", "test_is_cube"], [12, 2, 1, "", "test_shading_values"], [12, 2, 1, "", "test_tex_coords"], [12, 2, 1, "", "test_translucent"], [12, 2, 1, "", "test_transparency"], [12, 2, 1, "", "test_transparent"], [12, 2, 1, "", "test_vertex_positions"]], "torch": [[13, 1, 1, "", "MyCodeTestCase"]], "torch.MyCodeTestCase": [[13, 2, 1, "", "setUp"], [13, 2, 1, "", "test_colliders"], [13, 2, 1, "", "test_glass"], [13, 2, 1, "", "test_is_cube"], [13, 2, 1, "", "test_shading_values"], [13, 2, 1, "", "test_tex_coords"], [13, 2, 1, "", "test_translucent"], [13, 2, 1, "", "test_transparency"], [13, 2, 1, "", "test_transparent"], [13, 2, 1, "", "test_vertex_positions"]], "util": [[14, 1, 1, "", "MyCodeTestCase"]], "util.MyCodeTestCase": [[14, 2, 1, "", "setUp"], [14, 2, 1, "", "test_DIRECTIONS"], [14, 2, 1, "", "test_DOWN"], [14, 2, 1, "", "test_EAST"], [14, 2, 1, "", "test_NORTH"], [14, 2, 1, "", "test_SOUTH"], [14, 2, 1, "", "test_UP"], [14, 2, 1, "", "test_WEST"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"collid": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "curri": 1, "door": 2, "fire": 3, "ladder": 4, "leav": 5, "lever": 6, "matrix": 7, "model": 8, "number": 9, "plant": 10, "snow": 11, "tinted_glass": 12, "torch": 13, "util": 14, "minecraftclon": 15, "": 15, "softwar": 15, "design": 15, "document": 15, "kruslin2": 15, "content": 15, "indic": 15, "tabl": 15, "credit": 17, "maintain": 17, "author": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"collider module": [[0, "module-collider"]], "curry module": [[1, "module-curry"]], "door module": [[2, "module-door"]], "fire module": [[3, "module-fire"]], "ladder module": [[4, "module-ladder"]], "leaves module": [[5, "module-leaves"]], "lever module": [[6, "module-lever"]], "matrix module": [[7, "module-matrix"]], "models": [[8, "models"]], "number module": [[9, "module-number"]], "plant module": [[10, "module-plant"]], "snow module": [[11, "module-snow"]], "tinted_glass module": [[12, "module-tinted_glass"]], "torch module": [[13, "module-torch"]], "util module": [[14, "module-util"]], "Minecraftclone\u2019s software design documentation by kruslin2": [[15, "minecraftclone-s-software-design-documentation-by-kruslin2"]], "Contents:": [[15, null]], "Indices and tables": [[15, "indices-and-tables"]], "Credits": [[17, "credits"]], "Maintainer": [[17, "maintainer"]], "Authors": [[17, "authors"]]}, "indexentries": {"collider (class in collider)": [[0, "collider.Collider"]], "mycodetestcase (class in collider)": [[0, "collider.MyCodeTestCase"]], "collide() (collider.collider method)": [[0, "collider.Collider.collide"]], "collider": [[0, "module-collider"]], "module": [[0, "module-collider"], [1, "module-curry"], [2, "module-door"], [3, "module-fire"], [4, "module-ladder"], [5, "module-leaves"], [6, "module-lever"], [7, "module-matrix"], [9, "module-number"], [10, "module-plant"], [11, "module-snow"], [12, "module-tinted_glass"], [13, "module-torch"], [14, "module-util"]], "setup() (collider.mycodetestcase method)": [[0, "collider.MyCodeTestCase.setUp"]], "test_operation() (collider.mycodetestcase method)": [[0, "collider.MyCodeTestCase.test_operation"]], "mycodetestcase (class in curry)": [[1, "curry.MyCodeTestCase"]], "curry": [[1, "module-curry"]], "setup() (curry.mycodetestcase method)": [[1, "curry.MyCodeTestCase.setUp"]], "test_bones() (curry.mycodetestcase method)": [[1, "curry.MyCodeTestCase.test_bones"]], "test_colliders() (curry.mycodetestcase method)": [[1, "curry.MyCodeTestCase.test_colliders"]], "test_glass() (curry.mycodetestcase method)": [[1, "curry.MyCodeTestCase.test_glass"]], "test_is_cube() (curry.mycodetestcase method)": [[1, "curry.MyCodeTestCase.test_is_cube"]], "test_transparent() (curry.mycodetestcase method)": [[1, "curry.MyCodeTestCase.test_transparent"]], "mycodetestcase (class in door)": [[2, "door.MyCodeTestCase"]], "door": [[2, "module-door"]], "setup() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.setUp"]], "test_colliders() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_colliders"]], "test_glass() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_glass"]], "test_is_cube() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_is_cube"]], "test_shading_values() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_tex_coords"]], "test_translucent() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_translucent"]], "test_transparency() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_transparency"]], "test_transparent() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (door.mycodetestcase method)": [[2, "door.MyCodeTestCase.test_vertex_positions"]], "mycodetestcase (class in fire)": [[3, "fire.MyCodeTestCase"]], "fire": [[3, "module-fire"]], "setup() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.setUp"]], "test_colliders() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_colliders"]], "test_glass() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_glass"]], "test_is_cube() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_is_cube"]], "test_shading_values() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_tex_coords"]], "test_translucent() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_translucent"]], "test_transparency() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_transparency"]], "test_transparent() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (fire.mycodetestcase method)": [[3, "fire.MyCodeTestCase.test_vertex_positions"]], "mycodetestcase (class in ladder)": [[4, "ladder.MyCodeTestCase"]], "ladder": [[4, "module-ladder"]], "setup() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.setUp"]], "test_colliders() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_colliders"]], "test_glass() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_glass"]], "test_is_cube() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_is_cube"]], "test_shading_values() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_tex_coords"]], "test_translucent() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_translucent"]], "test_transparency() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_transparency"]], "test_transparent() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (ladder.mycodetestcase method)": [[4, "ladder.MyCodeTestCase.test_vertex_positions"]], "mycodetestcase (class in leaves)": [[5, "leaves.MyCodeTestCase"]], "leaves": [[5, "module-leaves"]], "setup() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.setUp"]], "test_colliders() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_colliders"]], "test_glass() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_glass"]], "test_is_cube() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_is_cube"]], "test_shading_values() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_tex_coords"]], "test_translucent() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_translucent"]], "test_transparency() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_transparency"]], "test_transparent() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (leaves.mycodetestcase method)": [[5, "leaves.MyCodeTestCase.test_vertex_positions"]], "mycodetestcase (class in lever)": [[6, "lever.MyCodeTestCase"]], "lever": [[6, "module-lever"]], "setup() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.setUp"]], "test_colliders() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_colliders"]], "test_glass() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_glass"]], "test_is_cube() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_is_cube"]], "test_shading_values() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_tex_coords"]], "test_translucent() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_translucent"]], "test_transparency() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_transparency"]], "test_transparent() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (lever.mycodetestcase method)": [[6, "lever.MyCodeTestCase.test_vertex_positions"]], "matrix (class in matrix)": [[7, "matrix.Matrix"]], "mycodetestcase (class in matrix)": [[7, "matrix.MyCodeTestCase"]], "copy_matrix() (in module matrix)": [[7, "matrix.copy_matrix"]], "frustum() (matrix.matrix method)": [[7, "matrix.Matrix.frustum"]], "load_identity() (matrix.matrix method)": [[7, "matrix.Matrix.load_identity"]], "matrix": [[7, "module-matrix"]], "multiply_matrices() (in module matrix)": [[7, "matrix.multiply_matrices"]], "orthographic() (matrix.matrix method)": [[7, "matrix.Matrix.orthographic"]], "perspective() (matrix.matrix method)": [[7, "matrix.Matrix.perspective"]], "rotate() (matrix.matrix method)": [[7, "matrix.Matrix.rotate"]], "rotate_2d() (matrix.matrix method)": [[7, "matrix.Matrix.rotate_2d"]], "scale() (matrix.matrix method)": [[7, "matrix.Matrix.scale"]], "setup() (matrix.mycodetestcase method)": [[7, "matrix.MyCodeTestCase.setUp"]], "test_operation() (matrix.mycodetestcase method)": [[7, "matrix.MyCodeTestCase.test_operation"]], "translate() (matrix.matrix method)": [[7, "matrix.Matrix.translate"]], "mycodetestcase (class in number)": [[9, "number.MyCodeTestCase"]], "number": [[9, "module-number"]], "setup() (number.mycodetestcase method)": [[9, "number.MyCodeTestCase.setUp"]], "test_indices() (number.mycodetestcase method)": [[9, "number.MyCodeTestCase.test_indices"]], "test_shading_values() (number.mycodetestcase method)": [[9, "number.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (number.mycodetestcase method)": [[9, "number.MyCodeTestCase.test_tex_coords"]], "test_vertex_positions() (number.mycodetestcase method)": [[9, "number.MyCodeTestCase.test_vertex_positions"]], "mycodetestcase (class in plant)": [[10, "plant.MyCodeTestCase"]], "plant": [[10, "module-plant"]], "setup() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.setUp"]], "test_colliders() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_colliders"]], "test_glass() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_glass"]], "test_is_cube() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_is_cube"]], "test_shading_values() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_tex_coords"]], "test_translucent() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_translucent"]], "test_transparency() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_transparency"]], "test_transparent() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (plant.mycodetestcase method)": [[10, "plant.MyCodeTestCase.test_vertex_positions"]], "mycodetestcase (class in snow)": [[11, "snow.MyCodeTestCase"]], "setup() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.setUp"]], "snow": [[11, "module-snow"]], "test_colliders() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_colliders"]], "test_glass() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_glass"]], "test_is_cube() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_is_cube"]], "test_shading_values() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_tex_coords"]], "test_translucent() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_translucent"]], "test_transparency() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_transparency"]], "test_transparent() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (snow.mycodetestcase method)": [[11, "snow.MyCodeTestCase.test_vertex_positions"]], "mycodetestcase (class in tinted_glass)": [[12, "tinted_glass.MyCodeTestCase"]], "setup() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.setUp"]], "test_colliders() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_colliders"]], "test_glass() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_glass"]], "test_is_cube() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_is_cube"]], "test_shading_values() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_tex_coords"]], "test_translucent() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_translucent"]], "test_transparency() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_transparency"]], "test_transparent() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (tinted_glass.mycodetestcase method)": [[12, "tinted_glass.MyCodeTestCase.test_vertex_positions"]], "tinted_glass": [[12, "module-tinted_glass"]], "mycodetestcase (class in torch)": [[13, "torch.MyCodeTestCase"]], "setup() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.setUp"]], "test_colliders() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_colliders"]], "test_glass() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_glass"]], "test_is_cube() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_is_cube"]], "test_shading_values() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_shading_values"]], "test_tex_coords() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_tex_coords"]], "test_translucent() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_translucent"]], "test_transparency() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_transparency"]], "test_transparent() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_transparent"]], "test_vertex_positions() (torch.mycodetestcase method)": [[13, "torch.MyCodeTestCase.test_vertex_positions"]], "torch": [[13, "module-torch"]], "mycodetestcase (class in util)": [[14, "util.MyCodeTestCase"]], "setup() (util.mycodetestcase method)": [[14, "util.MyCodeTestCase.setUp"]], "test_directions() (util.mycodetestcase method)": [[14, "util.MyCodeTestCase.test_DIRECTIONS"]], "test_down() (util.mycodetestcase method)": [[14, "util.MyCodeTestCase.test_DOWN"]], "test_east() (util.mycodetestcase method)": [[14, "util.MyCodeTestCase.test_EAST"]], "test_north() (util.mycodetestcase method)": [[14, "util.MyCodeTestCase.test_NORTH"]], "test_south() (util.mycodetestcase method)": [[14, "util.MyCodeTestCase.test_SOUTH"]], "test_up() (util.mycodetestcase method)": [[14, "util.MyCodeTestCase.test_UP"]], "test_west() (util.mycodetestcase method)": [[14, "util.MyCodeTestCase.test_WEST"]], "util": [[14, "module-util"]]}})